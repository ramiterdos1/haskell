<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta name="generator" content="MediaWiki 1.19.5-1+deb7u1" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/haskellwiki/opensearch_desc.php" title="HaskellWiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://www.haskell.org/haskellwiki/api.php?action=rsd" />
<link rel="copyright" href="/haskellwiki/HaskellWiki:Copyrights" />
<link rel="alternate" type="application/atom+xml" title="HaskellWiki Atom feed" href="/haskellwiki/index.php?title=Special:RecentChanges&amp;feed=atom" />		<title>99 questions/Solutions/66 - HaskellWiki</title>
		<style type="text/css" media="screen, projection">/*<![CDATA[*/
			@import "/wikistatic/skins//common/shared.css?303";
			@import "/wikistatic/skins//hawiki/main.css?303";
		/*]]>*/</style>
		<link rel="stylesheet" type="text/css" media="print" href="/wikistatic/skins//common/commonPrint.css?303" />
		<!--[if lt IE 5.5000]><style type="text/css">@import "/wikistatic/skins//hawiki/IE50Fixes.css?303";</style><![endif]-->
		<!--[if IE 5.5000]><style type="text/css">@import "/wikistatic/skins//hawiki/IE55Fixes.css?303";</style><![endif]-->
		<!--[if IE 6]><style type="text/css">@import "/wikistatic/skins//hawiki/IE60Fixes.css?303";</style><![endif]-->
		<!--[if IE 7]><style type="text/css">@import "/wikistatic/skins//hawiki/IE70Fixes.css?303";</style><![endif]-->
		<!--[if lte IE 7]><script type="text/javascript" src="/wikistatic/skins//hawiki/IEFixes.js?303"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
                                                <script type="text/javascript">
                        var isMSIE55 = (window.showModalDialog && window.clipboardData && window.createPopup); /*alert("test: " + isMSIE55);*/</script>

		<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"99_questions/Solutions/66","wgTitle":"99 questions/Solutions/66","wgCurRevisionId":40847,"wgArticleId":6503,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"99_questions/Solutions/66","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script>
		<script type="text/javascript" src="/wikistatic/skins//common/wikibits.js?303"><!-- wikibits js --></script>
		<!-- Head Scripts -->
<script src="http://www.haskell.org/haskellwiki/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=hawiki&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"99_questions/Solutions/66","wgTitle":"99 questions/Solutions/66","wgCurRevisionId":40847,"wgArticleId":6503,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"99_questions/Solutions/66","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function($){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":1,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"hawiki","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;},{},{});mw.loader.implement("user.tokens",function($){mw.user.tokens.set({"editToken":"+\\","watchToken":false});;},{},{});

/* cache key: wikidb:resourceloader:filter:minify-js:7:befcdb5e3b24ff89f900613de9ed4ea3 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script><style type="text/css">/*<![CDATA[*/
.source-haskell {line-height: normal;}
.source-haskell li, .source-haskell pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for haskell
 * CSS class: source-haskell, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.haskell.source-haskell .de1, .haskell.source-haskell .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.haskell.source-haskell  {font-family:monospace;}
.haskell.source-haskell .imp {font-weight: bold; color: red;}
.haskell.source-haskell li, .haskell.source-haskell .li1 {font-weight: normal; vertical-align:top;}
.haskell.source-haskell .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.haskell.source-haskell .li2 {font-weight: bold; vertical-align:top;}
.haskell.source-haskell .kw1 {color: #06c; font-weight: bold;}
.haskell.source-haskell .kw2 {color: #06c; font-weight: bold;}
.haskell.source-haskell .kw3 {font-weight: bold;}
.haskell.source-haskell .kw4 {color: #cccc00; font-weight: bold;}
.haskell.source-haskell .kw5 {color: maroon;}
.haskell.source-haskell .co1 {color: #5d478b; font-style: italic;}
.haskell.source-haskell .co2 {color: #339933; font-weight: bold;}
.haskell.source-haskell .coMULTI {color: #5d478b; font-style: italic;}
.haskell.source-haskell .es0 {background-color: #3cb371; font-weight: bold;}
.haskell.source-haskell .br0 {color: green;}
.haskell.source-haskell .sy0 {color: #339933; font-weight: bold;}
.haskell.source-haskell .st0 {background-color: #3cb371;}
.haskell.source-haskell .nu0 {color: red;}
.haskell.source-haskell .me1 {color: #060;}
.haskell.source-haskell .ln-xtra, .haskell.source-haskell li.ln-xtra, .haskell.source-haskell div.ln-xtra {background-color: #ffc;}
.haskell.source-haskell span.xtra { display:block; }

/*]]>*/
</style>	</head>
<body class="mediawiki ltr ns-0 ns-subject page-99_questions_Solutions_66 skin-hawiki">
   <div id="topbar" class="noprint">
	<div class="portlet noprint" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul><li><a class="homebutton" href="/haskellwiki/Haskell">Home</a></li>
				<li id="pt-login"><a href="/haskellwiki/index.php?title=Special:UserLogin&amp;returnto=99+questions%2FSolutions%2F66">Log in</a></li>
			</ul>
		</div>
	</div>
        	  <div id="p-search">
	    <div id="searchBody" class="pBody">
	       <form action="/haskellwiki/index.php" id="searchform"><div>
	          <input type='hidden' name="title" value="Special:Search"/>
	          <input id="searchInput" name="search" type="text" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" />

	         </div></form>
	    </div>
	  </div>
   </div>
	<div id="globalWrapper">
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/wikistatic/haskellwiki_logo.png);" href="/haskellwiki/Haskell"></a>
	</div>
	<div id="column-content">
        <div id="notice-area" class="noprint">
        <!-- ?php $this->data['sitenotice'] = 'This is a test instance.  Do not edit, your changes will be lost.'; ? -->
			        </div>
        <div id="content-wrapper">
	<div id="p-cactions" class="portlet noprint">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/haskellwiki/99_questions/Solutions/66">Page</a></li>
				 <li id="ca-talk" class="new"><a href="/haskellwiki/index.php?title=Talk:99_questions/Solutions/66&amp;action=edit&amp;redlink=1">Discussion</a></li>
				 <li id="ca-viewsource"><a href="/haskellwiki/index.php?title=99_questions/Solutions/66&amp;action=edit">View source</a></li>
				 <li id="ca-history"><a href="/haskellwiki/index.php?title=99_questions/Solutions/66&amp;action=history">History</a></li>			</ul>
		</div>
	</div>
                        <div id="content">
		<a name="top" id="top"></a>
                        <h1 id="firstHeading" class="firstHeading">99 questions/Solutions/66</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From HaskellWiki</h3>
			<div id="contentSub"><span class="subpages">&lt; <a href="/haskellwiki/99_questions" title="99 questions">99 questions</a> | <a href="/haskellwiki/99_questions/Solutions" title="99 questions/Solutions">Solutions</a></span></div>
			<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p>Yet another layout strategy is shown in the illustration below:
</p><p><img src="https://prof.ti.bfh.ch/hew1/informatik3/prolog/p-99/p66.gif" alt="p66.gif" />
</p><p>The method yields a very compact layout while maintaining a certain symmetry in every node. Find out the rules and write the corresponding Prolog predicate. Hint: Consider the horizontal distance between a node and its successor nodes. How tight can you pack together two subtrees to construct the combined binary tree?
</p><p>Use the same conventions as in problem P64 and P65 and test your predicate in an appropriate way. Note: This is a difficult problem. Don't give up too early!
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">layout <span class="sy0">::</span> Tree a <span class="sy0">-&gt;</span> Tree <span class="br0">&#40;</span>a<span class="sy0">,</span> Pos<span class="br0">&#41;</span>
layout t <span class="sy0">=</span> t'
  <span class="kw1">where</span> <span class="br0">&#40;</span>l<span class="sy0">,</span> t'<span class="sy0">,</span> r<span class="br0">&#41;</span> <span class="sy0">=</span> layoutAux x1 1 t
        x1 <span class="sy0">=</span> <span class="kw3">maximum</span> l <span class="sy0">+</span> 1
&#160;
        layoutAux <span class="sy0">::</span> <span class="kw4">Int</span> <span class="sy0">-&gt;</span> <span class="kw4">Int</span> <span class="sy0">-&gt;</span> Tree a <span class="sy0">-&gt;</span> <span class="br0">&#40;</span><span class="br0">&#91;</span><span class="kw4">Int</span><span class="br0">&#93;</span><span class="sy0">,</span> Tree <span class="br0">&#40;</span>a<span class="sy0">,</span> Pos<span class="br0">&#41;</span><span class="sy0">,</span> <span class="br0">&#91;</span><span class="kw4">Int</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
        layoutAux x y Empty <span class="sy0">=</span> <span class="br0">&#40;</span><span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy0">,</span> Empty<span class="sy0">,</span> <span class="br0">&#91;</span><span class="br0">&#93;</span><span class="br0">&#41;</span>
        layoutAux x y <span class="br0">&#40;</span>Branch a l r<span class="br0">&#41;</span> <span class="sy0">=</span> <span class="br0">&#40;</span>ll'<span class="sy0">,</span> Branch <span class="br0">&#40;</span>a<span class="sy0">,</span> <span class="br0">&#40;</span>x<span class="sy0">,</span>y<span class="br0">&#41;</span><span class="br0">&#41;</span> l' r'<span class="sy0">,</span> rr'<span class="br0">&#41;</span>
          <span class="kw1">where</span> <span class="br0">&#40;</span>ll<span class="sy0">,</span> l'<span class="sy0">,</span> lr<span class="br0">&#41;</span> <span class="sy0">=</span> layoutAux <span class="br0">&#40;</span>x<span class="sy0">-</span>sep<span class="br0">&#41;</span> <span class="br0">&#40;</span>y<span class="sy0">+</span>1<span class="br0">&#41;</span> l
                <span class="br0">&#40;</span>rl<span class="sy0">,</span> r'<span class="sy0">,</span> rr<span class="br0">&#41;</span> <span class="sy0">=</span> layoutAux <span class="br0">&#40;</span>x<span class="sy0">+</span>sep<span class="br0">&#41;</span> <span class="br0">&#40;</span>y<span class="sy0">+</span>1<span class="br0">&#41;</span> r
                sep <span class="sy0">=</span> <span class="kw3">maximum</span> <span class="br0">&#40;</span>0:<span class="kw3">zipWith</span> <span class="br0">&#40;</span><span class="sy0">+</span><span class="br0">&#41;</span> lr rl<span class="br0">&#41;</span> `<span class="kw3">div</span>` 2 <span class="sy0">+</span> 1
                ll' <span class="sy0">=</span> 0&#160;: overlay <span class="br0">&#40;</span><span class="kw3">map</span> <span class="br0">&#40;</span><span class="sy0">+</span>sep<span class="br0">&#41;</span> ll<span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw3">map</span> <span class="br0">&#40;</span><span class="kw3">subtract</span> sep<span class="br0">&#41;</span> rl<span class="br0">&#41;</span>
                rr' <span class="sy0">=</span> 0&#160;: overlay <span class="br0">&#40;</span><span class="kw3">map</span> <span class="br0">&#40;</span><span class="sy0">+</span>sep<span class="br0">&#41;</span> rr<span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw3">map</span> <span class="br0">&#40;</span><span class="kw3">subtract</span> sep<span class="br0">&#41;</span> lr<span class="br0">&#41;</span>
&#160;
<span class="co1">-- overlay xs ys = xs padded out to at least the length of ys</span>
<span class="co1">-- using any extra elements of ys</span>
overlay <span class="sy0">::</span> <span class="br0">&#91;</span>a<span class="br0">&#93;</span> <span class="sy0">-&gt;</span> <span class="br0">&#91;</span>a<span class="br0">&#93;</span> <span class="sy0">-&gt;</span> <span class="br0">&#91;</span>a<span class="br0">&#93;</span>
overlay <span class="br0">&#91;</span><span class="br0">&#93;</span> ys <span class="sy0">=</span> ys
overlay xs <span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy0">=</span> xs
overlay <span class="br0">&#40;</span>x:xs<span class="br0">&#41;</span> <span class="br0">&#40;</span>y:ys<span class="br0">&#41;</span> <span class="sy0">=</span> x&#160;: overlay xs ys</pre></div></div>
<p>The auxiliary function is passed the x- and y-coordinates for the root of the subtree and the subtree itself.
It returns
</p>
<ul><li> a list of distances the laid-out tree extends to the left at each level,
</li><li> the subtree annotated with positions, and
</li><li> a list of distances the laid-out tree extends to the right at each level.
</li></ul>
<p>These distances are usually positive, but may be 0 or negative in the case of a skewed tree.
To put two subtrees side by side, we must determine the least even separation so that they do not overlap on any level.
Having determined the separation, we can compute the extents of the composite tree.
</p><p>The definitions of <tt>layout</tt> and its auxiliary function use local recursion to compute the x-coordinates.
This works because nothing else depends on these coordinates.
</p><p><br />
Here is another solution. The helper function tries to place a node at (x,y), taking account of the guards at level y. Building up the tree from left to right.
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="kw1">import</span> Data<span class="sy0">.</span><span class="kw4">Maybe</span>
&#160;
&#160;
tree66 t <span class="sy0">=</span> 
    fromJust <span class="sy0">$</span> helper <span class="br0">&#91;</span><span class="br0">&#93;</span> 0 0 t
&#160;
helper gs x y <span class="br0">&#40;</span>Branch <span class="sy0">_</span> t0 t1<span class="br0">&#41;</span> <span class="sy0">=</span>
    <span class="kw1">if</span> isGuarded gs x                                       <span class="co1">-- are we prevented from placing a node at (x, y)?</span>
      <span class="kw1">then</span> Nothing
      <span class="kw1">else</span> <span class="kw1">case</span> helper <span class="br0">&#40;</span>guards gs<span class="br0">&#41;</span> <span class="br0">&#40;</span>x <span class="sy0">-</span> 1<span class="br0">&#41;</span> <span class="br0">&#40;</span>y <span class="sy0">+</span> 1<span class="br0">&#41;</span> t0 <span class="kw1">of</span>    <span class="co1">-- no, but can we also place t0 one unit to the left?</span>
        Nothing   <span class="sy0">-&gt;</span> Nothing
        Just t0'  <span class="sy0">-&gt;</span> placeNode <span class="br0">&#40;</span>t0':guards gs<span class="br0">&#41;</span> x y <span class="nu0">1</span> t0' t1 <span class="co1">-- yes, now place node and t1, trying radius of 1</span>
&#160;
helper gs x y Empty <span class="sy0">=</span>
    Just Empty
&#160;
<span class="co1">-- node with subtrees symmetrically placed, as in example picture</span>
placeNode gs x y r t0' t1 <span class="sy0">=</span>
    <span class="kw1">case</span> helper gs <span class="br0">&#40;</span>x <span class="sy0">+</span> r<span class="br0">&#41;</span> <span class="br0">&#40;</span>y <span class="sy0">+</span> 1<span class="br0">&#41;</span> t1 <span class="kw1">of</span>
      Nothing   <span class="sy0">-&gt;</span> placeNode gs <span class="br0">&#40;</span>x <span class="sy0">+</span> <span class="nu0">1</span><span class="br0">&#41;</span> y <span class="br0">&#40;</span>r <span class="sy0">+</span> <span class="nu0">1</span><span class="br0">&#41;</span> t0' t1    <span class="co1">-- could not place t1 here, trying more radius</span>
      Just t1'  <span class="sy0">-&gt;</span> Just <span class="sy0">$</span> Branch <span class="br0">&#40;</span>x<span class="sy0">,</span> y<span class="br0">&#41;</span> t0' t1'             <span class="co1">-- ok</span>
&#160;
<span class="co1">---- node with right subtree packed to the left. this also places the subtree at (0, 0)</span>
<span class="co1">--placeNode gs x y r t0' t1 =</span>
<span class="co1">--    case helper gs (x + r) (y + 1) t1 of</span>
<span class="co1">--      Nothing   -&gt; placeNode gs x y (r + 1) t0' t1</span>
<span class="co1">--      Just t1'  -&gt; Just $ Branch (x, y) t0' t1'</span>
&#160;
&#160;
isGuarded <span class="br0">&#40;</span>Branch <span class="br0">&#40;</span>x'<span class="sy0">,</span> y'<span class="br0">&#41;</span> <span class="sy0">_</span> <span class="sy0">_</span>:gs<span class="br0">&#41;</span> x <span class="sy0">=</span>
    x <span class="sy0">&lt;=</span> x'
isGuarded <span class="sy0">_</span> <span class="sy0">_</span> <span class="sy0">=</span> 
    False
&#160;
guards gs <span class="sy0">=</span>
    <span class="kw3">concatMap</span> children gs
    <span class="kw1">where</span>
      children <span class="br0">&#40;</span>Branch <span class="sy0">_</span> t0 t1<span class="br0">&#41;</span> <span class="sy0">=</span> <span class="br0">&#91;</span>t1<span class="sy0">,</span> t0<span class="br0">&#93;</span>
      children Empty <span class="sy0">=</span> <span class="br0">&#91;</span><span class="br0">&#93;</span></pre></div></div>

<!-- 
NewPP limit report
Preprocessor node count: 7/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:6503-0!*!*!*!*!*!* and timestamp 20141003041051 -->
</div><div class="printfooter">
Retrieved from "<a href="http://www.haskell.org/haskellwiki/index.php?title=99_questions/Solutions/66&amp;oldid=40847">http://www.haskell.org/haskellwiki/index.php?title=99_questions/Solutions/66&amp;oldid=40847</a>"</div>
			<div id='catlinks' class='catlinks catlinks-allhidden'></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div></div>
		<div id="column-one">
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage"><a href="/haskellwiki/Haskell">Haskell</a></li>
				<li id="n-portal"><a href="/haskellwiki/HaskellWiki:Community">Wiki community</a></li>
				<li id="n-recentchanges"><a href="/haskellwiki/Special:RecentChanges">Recent changes</a></li>
				<li id="n-randompage"><a href="/haskellwiki/Special:Random">Random page</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/haskellwiki/Special:WhatLinksHere/99_questions/Solutions/66">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/haskellwiki/Special:RecentChangesLinked/99_questions/Solutions/66">Related changes</a></li>
<li id="t-specialpages"><a href="/haskellwiki/Special:SpecialPages">Special pages</a></li>
				<li id="t-print"><a href="/haskellwiki/index.php?title=99_questions/Solutions/66&amp;printable=yes" rel="alternate">Printable version</a></li>				<li id="t-permalink"><a href="/haskellwiki/index.php?title=99_questions/Solutions/66&amp;oldid=40847">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="//www.mediawiki.org/"><img src="/wikistatic/skins//common/images/poweredby_mediawiki_88x31.png" height="31" width="88" alt="Powered by MediaWiki" /></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 6 July 2011, at 21:03.</li>
					<li id="viewcount">This page has been accessed 2,632 times.</li>
					<li id="copyright">Recent content is available under <a href="/haskellwiki/HaskellWiki:Copyrights" title="HaskellWiki:Copyrights">a simple permissive license</a>.</li>
					<li id="privacy"><a href="/haskellwiki/HaskellWiki:Privacy_policy" title="HaskellWiki:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/haskellwiki/HaskellWiki:About" title="HaskellWiki:About">About HaskellWiki</a></li>
					<li id="disclaimer"><a href="/haskellwiki/HaskellWiki:General_disclaimer" title="HaskellWiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.page.ready"], null, true);
}</script>
<script src="http://www.haskell.org/haskellwiki/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=hawiki&amp;*"></script>
<!-- Served in 0.107 secs. --><script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-15375175-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body></html>
