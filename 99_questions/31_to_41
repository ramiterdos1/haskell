<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta name="generator" content="MediaWiki 1.19.5-1+deb7u1" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/haskellwiki/opensearch_desc.php" title="HaskellWiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://www.haskell.org/haskellwiki/api.php?action=rsd" />
<link rel="copyright" href="/haskellwiki/HaskellWiki:Copyrights" />
<link rel="alternate" type="application/atom+xml" title="HaskellWiki Atom feed" href="/haskellwiki/index.php?title=Special:RecentChanges&amp;feed=atom" />		<title>99 questions/31 to 41 - HaskellWiki</title>
		<style type="text/css" media="screen, projection">/*<![CDATA[*/
			@import "/wikistatic/skins//common/shared.css?303";
			@import "/wikistatic/skins//hawiki/main.css?303";
		/*]]>*/</style>
		<link rel="stylesheet" type="text/css" media="print" href="/wikistatic/skins//common/commonPrint.css?303" />
		<!--[if lt IE 5.5000]><style type="text/css">@import "/wikistatic/skins//hawiki/IE50Fixes.css?303";</style><![endif]-->
		<!--[if IE 5.5000]><style type="text/css">@import "/wikistatic/skins//hawiki/IE55Fixes.css?303";</style><![endif]-->
		<!--[if IE 6]><style type="text/css">@import "/wikistatic/skins//hawiki/IE60Fixes.css?303";</style><![endif]-->
		<!--[if IE 7]><style type="text/css">@import "/wikistatic/skins//hawiki/IE70Fixes.css?303";</style><![endif]-->
		<!--[if lte IE 7]><script type="text/javascript" src="/wikistatic/skins//hawiki/IEFixes.js?303"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
                                                <script type="text/javascript">
                        var isMSIE55 = (window.showModalDialog && window.clipboardData && window.createPopup); /*alert("test: " + isMSIE55);*/</script>

		<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"99_questions/31_to_41","wgTitle":"99 questions/31 to 41","wgCurRevisionId":44681,"wgArticleId":2468,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Tutorials"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"99_questions/31_to_41","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script>
		<script type="text/javascript" src="/wikistatic/skins//common/wikibits.js?303"><!-- wikibits js --></script>
		<!-- Head Scripts -->
<script src="http://www.haskell.org/haskellwiki/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=hawiki&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"99_questions/31_to_41","wgTitle":"99 questions/31 to 41","wgCurRevisionId":44681,"wgArticleId":2468,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Tutorials"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"99_questions/31_to_41","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function($){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":1,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"hawiki","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;},{},{});mw.loader.implement("user.tokens",function($){mw.user.tokens.set({"editToken":"+\\","watchToken":false});;},{},{});

/* cache key: wikidb:resourceloader:filter:minify-js:7:befcdb5e3b24ff89f900613de9ed4ea3 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script><style type="text/css">/*<![CDATA[*/
.source-haskell {line-height: normal;}
.source-haskell li, .source-haskell pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for haskell
 * CSS class: source-haskell, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.haskell.source-haskell .de1, .haskell.source-haskell .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.haskell.source-haskell  {font-family:monospace;}
.haskell.source-haskell .imp {font-weight: bold; color: red;}
.haskell.source-haskell li, .haskell.source-haskell .li1 {font-weight: normal; vertical-align:top;}
.haskell.source-haskell .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.haskell.source-haskell .li2 {font-weight: bold; vertical-align:top;}
.haskell.source-haskell .kw1 {color: #06c; font-weight: bold;}
.haskell.source-haskell .kw2 {color: #06c; font-weight: bold;}
.haskell.source-haskell .kw3 {font-weight: bold;}
.haskell.source-haskell .kw4 {color: #cccc00; font-weight: bold;}
.haskell.source-haskell .kw5 {color: maroon;}
.haskell.source-haskell .co1 {color: #5d478b; font-style: italic;}
.haskell.source-haskell .co2 {color: #339933; font-weight: bold;}
.haskell.source-haskell .coMULTI {color: #5d478b; font-style: italic;}
.haskell.source-haskell .es0 {background-color: #3cb371; font-weight: bold;}
.haskell.source-haskell .br0 {color: green;}
.haskell.source-haskell .sy0 {color: #339933; font-weight: bold;}
.haskell.source-haskell .st0 {background-color: #3cb371;}
.haskell.source-haskell .nu0 {color: red;}
.haskell.source-haskell .me1 {color: #060;}
.haskell.source-haskell .ln-xtra, .haskell.source-haskell li.ln-xtra, .haskell.source-haskell div.ln-xtra {background-color: #ffc;}
.haskell.source-haskell span.xtra { display:block; }

/*]]>*/
</style>	</head>
<body class="mediawiki ltr ns-0 ns-subject page-99_questions_31_to_41 skin-hawiki">
   <div id="topbar" class="noprint">
	<div class="portlet noprint" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul><li><a class="homebutton" href="/haskellwiki/Haskell">Home</a></li>
				<li id="pt-login"><a href="/haskellwiki/index.php?title=Special:UserLogin&amp;returnto=99+questions%2F31+to+41">Log in</a></li>
			</ul>
		</div>
	</div>
        	  <div id="p-search">
	    <div id="searchBody" class="pBody">
	       <form action="/haskellwiki/index.php" id="searchform"><div>
	          <input type='hidden' name="title" value="Special:Search"/>
	          <input id="searchInput" name="search" type="text" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" />

	         </div></form>
	    </div>
	  </div>
   </div>
	<div id="globalWrapper">
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/wikistatic/haskellwiki_logo.png);" href="/haskellwiki/Haskell"></a>
	</div>
	<div id="column-content">
        <div id="notice-area" class="noprint">
        <!-- ?php $this->data['sitenotice'] = 'This is a test instance.  Do not edit, your changes will be lost.'; ? -->
			        </div>
        <div id="content-wrapper">
	<div id="p-cactions" class="portlet noprint">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/haskellwiki/99_questions/31_to_41">Page</a></li>
				 <li id="ca-talk"><a href="/haskellwiki/Talk:99_questions/31_to_41">Discussion</a></li>
				 <li id="ca-viewsource"><a href="/haskellwiki/index.php?title=99_questions/31_to_41&amp;action=edit">View source</a></li>
				 <li id="ca-history"><a href="/haskellwiki/index.php?title=99_questions/31_to_41&amp;action=history">History</a></li>			</ul>
		</div>
	</div>
                        <div id="content">
		<a name="top" id="top"></a>
                        <h1 id="firstHeading" class="firstHeading">99 questions/31 to 41</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From HaskellWiki</h3>
			<div id="contentSub"><span class="subpages">&lt; <a href="/haskellwiki/99_questions" title="99 questions">99 questions</a></span></div>
			<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p><br />
This is part of <a href="/haskellwiki/H-99:_Ninety-Nine_Haskell_Problems" title="H-99: Ninety-Nine Haskell Problems">Ninety-Nine Haskell Problems</a>, based on <a rel="nofollow" class="external text" href="https://prof.ti.bfh.ch/hew1/informatik3/prolog/p-99/">Ninety-Nine Prolog Problems</a>.
</p>
<h2> <span class="mw-headline" id="Arithmetic">1  Arithmetic </span></h2>
<h2> <span class="mw-headline" id="Problem_31">2  Problem 31 </span></h2>
<p>(**) Determine whether a given integer number is prime.
</p><p>Example:
</p>
<pre>
* (is-prime 7)
T
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">P31<span class="sy0">&gt;</span> isPrime <span class="nu0">7</span>
True</pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/31" title="99 questions/Solutions/31"> Solutions</a>
</p><p><br />        
</p>
<h2> <span class="mw-headline" id="Problem_32">3  Problem 32 </span></h2>
<p>(**) Determine the greatest common divisor of two positive integer numbers. Use <a rel="nofollow" class="external text" href="http://en.wikipedia.org/wiki/Euclidean_algorithm">Euclid's algorithm</a>.
</p><p>Example:
</p>
<pre>
* (gcd 36 63)
9
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="br0">&#91;</span>myGCD <span class="nu0">36</span> <span class="nu0">63</span><span class="sy0">,</span> myGCD <span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">3</span><span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">6</span><span class="br0">&#41;</span><span class="sy0">,</span> myGCD <span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">3</span><span class="br0">&#41;</span> <span class="nu0">6</span><span class="br0">&#93;</span>
<span class="br0">&#91;</span><span class="nu0">9</span><span class="sy0">,</span><span class="nu0">3</span><span class="sy0">,</span><span class="nu0">3</span><span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/32" title="99 questions/Solutions/32"> Solutions</a>
</p>
<h2> <span class="mw-headline" id="Problem_33">4  Problem 33 </span></h2>
<p>(*) Determine whether two positive integer numbers are coprime. Two numbers are coprime if their greatest common divisor equals 1.
</p><p>Example:
</p>
<pre>
* (coprime 35 64)
T
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">*</span> coprime <span class="nu0">35</span> <span class="nu0">64</span>
True</pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/33" title="99 questions/Solutions/33"> Solutions</a>
</p><p><br />        
</p>
<h2> <span class="mw-headline" id="Problem_34">5  Problem 34 </span></h2>
<p>(**) Calculate Euler's totient function phi(m).
</p><p>Euler's so-called totient function phi(m) is defined as the number of positive integers r (1 &lt;= r &lt; m) that are coprime to m.
</p><p>Example: m = 10: r = 1,3,7,9; thus phi(m) = 4. Note the special case: phi(1) = 1.
</p><p>Example:
</p>
<pre>
* (totient-phi 10)
4
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">*</span> totient <span class="nu0">10</span>
<span class="nu0">4</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/34" title="99 questions/Solutions/34"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_35">6  Problem 35 </span></h2>
<p>(**) Determine the prime factors of a given positive integer. Construct a flat list containing the prime factors in ascending order.
</p><p>Example:
</p>
<pre>
* (prime-factors 315)
(3 3 5 7)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">&gt;</span> primeFactors <span class="nu0">315</span>
<span class="br0">&#91;</span><span class="nu0">3</span><span class="sy0">,</span> <span class="nu0">3</span><span class="sy0">,</span> <span class="nu0">5</span><span class="sy0">,</span> <span class="nu0">7</span><span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/35" title="99 questions/Solutions/35"> Solutions</a>
</p><p><br />        
</p>
<h2> <span class="mw-headline" id="Problem_36">7  Problem 36 </span></h2>
<p>(**) Determine the prime factors of a given positive integer.
</p><p>Construct a list containing the prime factors and their multiplicity.
</p><p>Example:
</p>
<pre>
* (prime-factors-mult 315)
((3 2) (5 1) (7 1))
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">*</span>Main<span class="sy0">&gt;</span> prime<span class="sy0">_</span>factors<span class="sy0">_</span>mult <span class="nu0">315</span>
<span class="br0">&#91;</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="sy0">,</span><span class="nu0">2</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">5</span><span class="sy0">,</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">7</span><span class="sy0">,</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/36" title="99 questions/Solutions/36"> Solutions</a>
</p><p><br />        
</p>
<h2> <span class="mw-headline" id="Problem_37">8  Problem 37 </span></h2>
<p>(**) Calculate Euler's totient function phi(m) (improved).
</p><p>See problem 34 for the definition of Euler's totient function. If the list of the prime factors of a number m is known in the form of problem 36 then the function phi(m) can be efficiently calculated as follows: Let ((p1 m1) (p2 m2) (p3 m3) ...) be the list of prime factors (and their multiplicities) of a given number m. Then phi(m) can be calculated with the following formula:
</p>
<pre>
phi(m) = (p1 - 1) * p1 ** (m1 - 1) * 
         (p2 - 1) * p2 ** (m2 - 1) * 
         (p3 - 1) * p3 ** (m3 - 1) * ...
</pre>
<p>Note that a ** b stands for the b'th power of a.
</p><p><a href="/haskellwiki/99_questions/Solutions/37" title="99 questions/Solutions/37"> Solutions</a>
</p>
<h2> <span class="mw-headline" id="Problem_38">9  Problem 38 </span></h2>
<p>(*) Compare the two methods of calculating Euler's totient function.
</p><p>Use the solutions of problems 34 and 37 to compare the algorithms. Take the number of reductions as a measure for efficiency. Try to calculate phi(10090) as an example.
</p><p>(no solution required)
</p><p><br />        
</p>
<h2> <span class="mw-headline" id="Problem_39">10  Problem 39 </span></h2>
<p>(*) A list of prime numbers.
</p><p>Given a range of integers by its lower and upper limit, construct a list of all prime numbers in that range.
</p><p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">P29<span class="sy0">&gt;</span> primesR <span class="nu0">10</span> <span class="nu0">20</span>
<span class="br0">&#91;</span><span class="nu0">11</span><span class="sy0">,</span><span class="nu0">13</span><span class="sy0">,</span><span class="nu0">17</span><span class="sy0">,</span><span class="nu0">19</span><span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/39" title="99 questions/Solutions/39"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_40">11  Problem 40 </span></h2>
<p>(**) Goldbach's conjecture.
</p><p>Goldbach's conjecture says that every positive even number greater than 2 is the sum of two prime numbers. Example: 28 = 5 + 23. It is one of the most famous facts in number theory that has not been proved to be correct in the general case. It has been numerically confirmed up to very large numbers (much larger than we can go with our Prolog system). Write a predicate to find the two prime numbers that sum up to a given even integer.
</p><p>Example:
</p>
<pre>
* (goldbach 28)
(5 23)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">*</span>goldbach <span class="nu0">28</span>
<span class="br0">&#40;</span><span class="nu0">5</span><span class="sy0">,</span> <span class="nu0">23</span><span class="br0">&#41;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/40" title="99 questions/Solutions/40"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_41">12  Problem 41 </span></h2>
<p>(**) Given a range of integers by its lower and upper limit, print a list of all even numbers and their Goldbach composition.
</p><p>In most cases, if an even number is written as the sum of two prime numbers, one of them is very small. Very rarely, the primes are both bigger than say 50. Try to find out how many such cases there are in the range 2..3000.
</p><p>Example:
</p>
<pre>
* (goldbach-list 9 20)
10 = 3 + 7
12 = 5 + 7
14 = 3 + 11
16 = 3 + 13
18 = 5 + 13
20 = 3 + 17
* (goldbach-list 1 2000 50)
992 = 73 + 919
1382 = 61 + 1321
1856 = 67 + 1789
1928 = 61 + 1867
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">*</span>Exercises<span class="sy0">&gt;</span> goldbachList <span class="nu0">9</span> <span class="nu0">20</span>
<span class="br0">&#91;</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="sy0">,</span><span class="nu0">7</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">5</span><span class="sy0">,</span><span class="nu0">7</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="sy0">,</span><span class="nu0">11</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="sy0">,</span><span class="nu0">13</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">5</span><span class="sy0">,</span><span class="nu0">13</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">3</span><span class="sy0">,</span><span class="nu0">17</span><span class="br0">&#41;</span><span class="br0">&#93;</span>
<span class="sy0">*</span>Exercises<span class="sy0">&gt;</span> goldbachList' <span class="nu0">4</span> <span class="nu0">2000</span> <span class="nu0">50</span>
<span class="br0">&#91;</span><span class="br0">&#40;</span><span class="nu0">73</span><span class="sy0">,</span><span class="nu0">919</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">61</span><span class="sy0">,</span><span class="nu0">1321</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">67</span><span class="sy0">,</span><span class="nu0">1789</span><span class="br0">&#41;</span><span class="sy0">,</span><span class="br0">&#40;</span><span class="nu0">61</span><span class="sy0">,</span><span class="nu0">1867</span><span class="br0">&#41;</span><span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/41" title="99 questions/Solutions/41"> Solutions</a>
</p>
<!-- 
NewPP limit report
Preprocessor node count: 197/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2468-0!*!0!1!*!*!* and timestamp 20141002235909 -->
</div><div class="printfooter">
Retrieved from "<a href="http://www.haskell.org/haskellwiki/index.php?title=99_questions/31_to_41&amp;oldid=44681">http://www.haskell.org/haskellwiki/index.php?title=99_questions/31_to_41&amp;oldid=44681</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/haskellwiki/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="/haskellwiki/Category:Tutorials" title="Category:Tutorials">Tutorials</a></li></ul></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div></div>
		<div id="column-one">
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage"><a href="/haskellwiki/Haskell">Haskell</a></li>
				<li id="n-portal"><a href="/haskellwiki/HaskellWiki:Community">Wiki community</a></li>
				<li id="n-recentchanges"><a href="/haskellwiki/Special:RecentChanges">Recent changes</a></li>
				<li id="n-randompage"><a href="/haskellwiki/Special:Random">Random page</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/haskellwiki/Special:WhatLinksHere/99_questions/31_to_41">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/haskellwiki/Special:RecentChangesLinked/99_questions/31_to_41">Related changes</a></li>
<li id="t-specialpages"><a href="/haskellwiki/Special:SpecialPages">Special pages</a></li>
				<li id="t-print"><a href="/haskellwiki/index.php?title=99_questions/31_to_41&amp;printable=yes" rel="alternate">Printable version</a></li>				<li id="t-permalink"><a href="/haskellwiki/index.php?title=99_questions/31_to_41&amp;oldid=44681">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="//www.mediawiki.org/"><img src="/wikistatic/skins//common/images/poweredby_mediawiki_88x31.png" height="31" width="88" alt="Powered by MediaWiki" /></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 25 February 2012, at 05:06.</li>
					<li id="viewcount">This page has been accessed 58,103 times.</li>
					<li id="copyright">Recent content is available under <a href="/haskellwiki/HaskellWiki:Copyrights" title="HaskellWiki:Copyrights">a simple permissive license</a>.</li>
					<li id="privacy"><a href="/haskellwiki/HaskellWiki:Privacy_policy" title="HaskellWiki:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/haskellwiki/HaskellWiki:About" title="HaskellWiki:About">About HaskellWiki</a></li>
					<li id="disclaimer"><a href="/haskellwiki/HaskellWiki:General_disclaimer" title="HaskellWiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.page.ready"], null, true);
}</script>
<script src="http://www.haskell.org/haskellwiki/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=hawiki&amp;*"></script>
<!-- Served in 0.091 secs. --><script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-15375175-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body></html>
