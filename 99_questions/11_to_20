<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta name="generator" content="MediaWiki 1.19.5-1+deb7u1" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/haskellwiki/opensearch_desc.php" title="HaskellWiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://www.haskell.org/haskellwiki/api.php?action=rsd" />
<link rel="copyright" href="/haskellwiki/HaskellWiki:Copyrights" />
<link rel="alternate" type="application/atom+xml" title="HaskellWiki Atom feed" href="/haskellwiki/index.php?title=Special:RecentChanges&amp;feed=atom" />		<title>99 questions/11 to 20 - HaskellWiki</title>
		<style type="text/css" media="screen, projection">/*<![CDATA[*/
			@import "/wikistatic/skins//common/shared.css?303";
			@import "/wikistatic/skins//hawiki/main.css?303";
		/*]]>*/</style>
		<link rel="stylesheet" type="text/css" media="print" href="/wikistatic/skins//common/commonPrint.css?303" />
		<!--[if lt IE 5.5000]><style type="text/css">@import "/wikistatic/skins//hawiki/IE50Fixes.css?303";</style><![endif]-->
		<!--[if IE 5.5000]><style type="text/css">@import "/wikistatic/skins//hawiki/IE55Fixes.css?303";</style><![endif]-->
		<!--[if IE 6]><style type="text/css">@import "/wikistatic/skins//hawiki/IE60Fixes.css?303";</style><![endif]-->
		<!--[if IE 7]><style type="text/css">@import "/wikistatic/skins//hawiki/IE70Fixes.css?303";</style><![endif]-->
		<!--[if lte IE 7]><script type="text/javascript" src="/wikistatic/skins//hawiki/IEFixes.js?303"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
                                                <script type="text/javascript">
                        var isMSIE55 = (window.showModalDialog && window.clipboardData && window.createPopup); /*alert("test: " + isMSIE55);*/</script>

		<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"99_questions/11_to_20","wgTitle":"99 questions/11 to 20","wgCurRevisionId":45787,"wgArticleId":2466,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Tutorials"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"99_questions/11_to_20","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script>
		<script type="text/javascript" src="/wikistatic/skins//common/wikibits.js?303"><!-- wikibits js --></script>
		<!-- Head Scripts -->
<script src="http://www.haskell.org/haskellwiki/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=hawiki&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"99_questions/11_to_20","wgTitle":"99 questions/11 to 20","wgCurRevisionId":45787,"wgArticleId":2466,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Tutorials"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"99_questions/11_to_20","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function($){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":1,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"hawiki","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;},{},{});mw.loader.implement("user.tokens",function($){mw.user.tokens.set({"editToken":"+\\","watchToken":false});;},{},{});

/* cache key: wikidb:resourceloader:filter:minify-js:7:befcdb5e3b24ff89f900613de9ed4ea3 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script><style type="text/css">/*<![CDATA[*/
.source-haskell {line-height: normal;}
.source-haskell li, .source-haskell pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for haskell
 * CSS class: source-haskell, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.haskell.source-haskell .de1, .haskell.source-haskell .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.haskell.source-haskell  {font-family:monospace;}
.haskell.source-haskell .imp {font-weight: bold; color: red;}
.haskell.source-haskell li, .haskell.source-haskell .li1 {font-weight: normal; vertical-align:top;}
.haskell.source-haskell .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.haskell.source-haskell .li2 {font-weight: bold; vertical-align:top;}
.haskell.source-haskell .kw1 {color: #06c; font-weight: bold;}
.haskell.source-haskell .kw2 {color: #06c; font-weight: bold;}
.haskell.source-haskell .kw3 {font-weight: bold;}
.haskell.source-haskell .kw4 {color: #cccc00; font-weight: bold;}
.haskell.source-haskell .kw5 {color: maroon;}
.haskell.source-haskell .co1 {color: #5d478b; font-style: italic;}
.haskell.source-haskell .co2 {color: #339933; font-weight: bold;}
.haskell.source-haskell .coMULTI {color: #5d478b; font-style: italic;}
.haskell.source-haskell .es0 {background-color: #3cb371; font-weight: bold;}
.haskell.source-haskell .br0 {color: green;}
.haskell.source-haskell .sy0 {color: #339933; font-weight: bold;}
.haskell.source-haskell .st0 {background-color: #3cb371;}
.haskell.source-haskell .nu0 {color: red;}
.haskell.source-haskell .me1 {color: #060;}
.haskell.source-haskell .ln-xtra, .haskell.source-haskell li.ln-xtra, .haskell.source-haskell div.ln-xtra {background-color: #ffc;}
.haskell.source-haskell span.xtra { display:block; }

/*]]>*/
</style>	</head>
<body class="mediawiki ltr ns-0 ns-subject page-99_questions_11_to_20 skin-hawiki">
   <div id="topbar" class="noprint">
	<div class="portlet noprint" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul><li><a class="homebutton" href="/haskellwiki/Haskell">Home</a></li>
				<li id="pt-login"><a href="/haskellwiki/index.php?title=Special:UserLogin&amp;returnto=99+questions%2F11+to+20">Log in</a></li>
			</ul>
		</div>
	</div>
        	  <div id="p-search">
	    <div id="searchBody" class="pBody">
	       <form action="/haskellwiki/index.php" id="searchform"><div>
	          <input type='hidden' name="title" value="Special:Search"/>
	          <input id="searchInput" name="search" type="text" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" />

	         </div></form>
	    </div>
	  </div>
   </div>
	<div id="globalWrapper">
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/wikistatic/haskellwiki_logo.png);" href="/haskellwiki/Haskell"></a>
	</div>
	<div id="column-content">
        <div id="notice-area" class="noprint">
        <!-- ?php $this->data['sitenotice'] = 'This is a test instance.  Do not edit, your changes will be lost.'; ? -->
			        </div>
        <div id="content-wrapper">
	<div id="p-cactions" class="portlet noprint">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/haskellwiki/99_questions/11_to_20">Page</a></li>
				 <li id="ca-talk"><a href="/haskellwiki/Talk:99_questions/11_to_20">Discussion</a></li>
				 <li id="ca-viewsource"><a href="/haskellwiki/index.php?title=99_questions/11_to_20&amp;action=edit">View source</a></li>
				 <li id="ca-history"><a href="/haskellwiki/index.php?title=99_questions/11_to_20&amp;action=history">History</a></li>			</ul>
		</div>
	</div>
                        <div id="content">
		<a name="top" id="top"></a>
                        <h1 id="firstHeading" class="firstHeading">99 questions/11 to 20</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From HaskellWiki</h3>
			<div id="contentSub"><span class="subpages">&lt; <a href="/haskellwiki/99_questions" title="99 questions">99 questions</a></span></div>
			<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p><br />
This is part of <a href="/haskellwiki/H-99:_Ninety-Nine_Haskell_Problems" title="H-99: Ninety-Nine Haskell Problems">Ninety-Nine Haskell Problems</a>, based on <a rel="nofollow" class="external text" href="https://prof.ti.bfh.ch/hew1/informatik3/prolog/p-99/">Ninety-Nine Prolog Problems</a> and <a rel="nofollow" class="external text" href="http://www.ic.unicamp.br/~meidanis/courses/mc336/2006s2/funcional/L-99_Ninety-Nine_Lisp_Problems.html">Ninety-Nine Lisp Problems</a>.
</p>
<h2> <span class="mw-headline" id="Problem_11">1  Problem 11 </span></h2>
<p>(*) Modified run-length encoding.
</p><p>Modify the result of problem 10 in such a way that if an element has no duplicates it is simply copied into the result list. Only elements with duplicates are transferred as (N E) lists.
</p><p>Example:
</p>
<pre>
* (encode-modified '(a a a a b c c a a d e e e e))
((4 A) B (2 C) (2 A) D (4 E))
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">P11<span class="sy0">&gt;</span> encodeModified <span class="st0">&quot;aaaabccaadeeee&quot;</span>
<span class="br0">&#91;</span>Multiple <span class="nu0">4</span> 'a'<span class="sy0">,</span>Single 'b'<span class="sy0">,</span>Multiple <span class="nu0">2</span> 'c'<span class="sy0">,</span>
 Multiple <span class="nu0">2</span> 'a'<span class="sy0">,</span>Single 'd'<span class="sy0">,</span>Multiple <span class="nu0">4</span> 'e'<span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/11" title="99 questions/Solutions/11"> Solutions</a>
</p>
<h2> <span class="mw-headline" id="Problem_12">2  Problem 12 </span></h2>
<p>(**) Decode a run-length encoded list.
</p><p>Given a run-length code list generated as specified in problem 11. Construct its uncompressed version.
</p><p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">P12<span class="sy0">&gt;</span> decodeModified 
       <span class="br0">&#91;</span>Multiple <span class="nu0">4</span> 'a'<span class="sy0">,</span>Single 'b'<span class="sy0">,</span>Multiple <span class="nu0">2</span> 'c'<span class="sy0">,</span>
        Multiple <span class="nu0">2</span> 'a'<span class="sy0">,</span>Single 'd'<span class="sy0">,</span>Multiple <span class="nu0">4</span> 'e'<span class="br0">&#93;</span>
<span class="st0">&quot;aaaabccaadeeee&quot;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/12" title="99 questions/Solutions/12"> Solutions</a>
</p>
<h2> <span class="mw-headline" id="Problem_13">3  Problem 13 </span></h2>
<p>(**) Run-length encoding of a list (direct solution). 
</p><p>Implement the so-called run-length encoding data compression method directly. I.e. don't explicitly create the sublists containing the duplicates, as in problem 9, but only count them. As in problem P11, simplify the result list by replacing the singleton lists (1 X) by X.
</p><p>Example:
</p>
<pre>
* (encode-direct '(a a a a b c c a a d e e e e))
((4 A) B (2 C) (2 A) D (4 E))
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">P13<span class="sy0">&gt;</span> encodeDirect <span class="st0">&quot;aaaabccaadeeee&quot;</span>
<span class="br0">&#91;</span>Multiple <span class="nu0">4</span> 'a'<span class="sy0">,</span>Single 'b'<span class="sy0">,</span>Multiple <span class="nu0">2</span> 'c'<span class="sy0">,</span>
 Multiple <span class="nu0">2</span> 'a'<span class="sy0">,</span>Single 'd'<span class="sy0">,</span>Multiple <span class="nu0">4</span> 'e'<span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/13" title="99 questions/Solutions/13"> Solutions</a>
</p>
<h2> <span class="mw-headline" id="Problem_14">4  Problem 14 </span></h2>
<p>(*) Duplicate the elements of a list.
</p><p>Example:
</p>
<pre>
* (dupli '(a b c c d))
(A A B B C C C C D D)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">&gt;</span> dupli <span class="br0">&#91;</span><span class="nu0">1</span><span class="sy0">,</span> <span class="nu0">2</span><span class="sy0">,</span> <span class="nu0">3</span><span class="br0">&#93;</span>
<span class="br0">&#91;</span><span class="nu0">1</span><span class="sy0">,</span><span class="nu0">1</span><span class="sy0">,</span><span class="nu0">2</span><span class="sy0">,</span><span class="nu0">2</span><span class="sy0">,</span><span class="nu0">3</span><span class="sy0">,</span><span class="nu0">3</span><span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/14" title="99 questions/Solutions/14"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_15">5  Problem 15 </span></h2>
<p>(**) Replicate the elements of a list a given number of times.
</p><p>Example:
</p>
<pre>
* (repli '(a b c) 3)
(A A A B B B C C C)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">&gt;</span> repli <span class="st0">&quot;abc&quot;</span> <span class="nu0">3</span>
<span class="st0">&quot;aaabbbccc&quot;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/15" title="99 questions/Solutions/15"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_16">6  Problem 16 </span></h2>
<p>(**) Drop every N'th element from a list.
</p><p>Example:
</p>
<pre>
* (drop '(a b c d e f g h i k) 3)
(A B D E G H K)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">*</span>Main<span class="sy0">&gt;</span> dropEvery <span class="st0">&quot;abcdefghik&quot;</span> <span class="nu0">3</span>
<span class="st0">&quot;abdeghk&quot;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/16" title="99 questions/Solutions/16"> Solutions</a>
</p><p><br />        
</p>
<h2> <span class="mw-headline" id="Problem_17">7  Problem 17 </span></h2>
<p>(*) Split a list into two parts; the length of the first part is given.
</p><p>Do not use any predefined predicates.
</p><p>Example:
</p>
<pre>
* (split '(a b c d e f g h i k) 3)
( (A B C) (D E F G H I K))
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">*</span>Main<span class="sy0">&gt;</span> split <span class="st0">&quot;abcdefghik&quot;</span> <span class="nu0">3</span>
<span class="br0">&#40;</span><span class="st0">&quot;abc&quot;</span><span class="sy0">,</span> <span class="st0">&quot;defghik&quot;</span><span class="br0">&#41;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/17" title="99 questions/Solutions/17"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_18">8  Problem 18 </span></h2>
<p>(**) Extract a slice from a list.
</p><p>Given two indices, i and k, the slice is the list containing the elements between the i'th and k'th element of the original list (both limits included). Start counting the elements with 1.
</p><p>Example:
</p>
<pre>
* (slice '(a b c d e f g h i k) 3 7)
(C D E F G)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">*</span>Main<span class="sy0">&gt;</span> slice <span class="br0">&#91;</span>'a'<span class="sy0">,</span>'b'<span class="sy0">,</span>'c'<span class="sy0">,</span>'d'<span class="sy0">,</span>'e'<span class="sy0">,</span>'f'<span class="sy0">,</span>'g'<span class="sy0">,</span>'h'<span class="sy0">,</span>'i'<span class="sy0">,</span>'k'<span class="br0">&#93;</span> <span class="nu0">3</span> <span class="nu0">7</span>
<span class="st0">&quot;cdefg&quot;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/18" title="99 questions/Solutions/18"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_19">9  Problem 19 </span></h2>
<p>(**) Rotate a list N places to the left.
</p><p>Hint: Use the predefined functions length and (++).
</p><p>Examples:
</p>
<pre>
* (rotate '(a b c d e f g h) 3)
(D E F G H A B C)

* (rotate '(a b c d e f g h) -2)
(G H A B C D E F)
</pre>
<p>Examples in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">*</span>Main<span class="sy0">&gt;</span> rotate <span class="br0">&#91;</span>'a'<span class="sy0">,</span>'b'<span class="sy0">,</span>'c'<span class="sy0">,</span>'d'<span class="sy0">,</span>'e'<span class="sy0">,</span>'f'<span class="sy0">,</span>'g'<span class="sy0">,</span>'h'<span class="br0">&#93;</span> <span class="nu0">3</span>
<span class="st0">&quot;defghabc&quot;</span>
&#160;
<span class="sy0">*</span>Main<span class="sy0">&gt;</span> rotate <span class="br0">&#91;</span>'a'<span class="sy0">,</span>'b'<span class="sy0">,</span>'c'<span class="sy0">,</span>'d'<span class="sy0">,</span>'e'<span class="sy0">,</span>'f'<span class="sy0">,</span>'g'<span class="sy0">,</span>'h'<span class="br0">&#93;</span> <span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">2</span><span class="br0">&#41;</span>
<span class="st0">&quot;ghabcdef&quot;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/19" title="99 questions/Solutions/19"> Solutions</a>
</p><p><br />       
</p>
<h2> <span class="mw-headline" id="Problem_20">10  Problem 20 </span></h2>
<p>(*) Remove the K'th element from a list.
</p><p>Example in Prolog:
</p>
<pre>
?- remove_at(X,[a,b,c,d],2,R).
X = b
R = [a,c,d]
</pre>
<p>Example in Lisp:
</p>
<pre>
* (remove-at '(a b c d) 2)
(A C D)
</pre>
<p>(Note that this only returns the residue list, while the Prolog version also returns the deleted element.)
</p><p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">*</span>Main<span class="sy0">&gt;</span> removeAt <span class="nu0">2</span> <span class="st0">&quot;abcd&quot;</span>
<span class="br0">&#40;</span>'b'<span class="sy0">,</span><span class="st0">&quot;acd&quot;</span><span class="br0">&#41;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/20" title="99 questions/Solutions/20"> Solutions</a>
</p>
<!-- 
NewPP limit report
Preprocessor node count: 201/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2466-0!*!0!1!*!*!* and timestamp 20141003013855 -->
</div><div class="printfooter">
Retrieved from "<a href="http://www.haskell.org/haskellwiki/index.php?title=99_questions/11_to_20&amp;oldid=45787">http://www.haskell.org/haskellwiki/index.php?title=99_questions/11_to_20&amp;oldid=45787</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/haskellwiki/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="/haskellwiki/Category:Tutorials" title="Category:Tutorials">Tutorials</a></li></ul></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div></div>
		<div id="column-one">
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage"><a href="/haskellwiki/Haskell">Haskell</a></li>
				<li id="n-portal"><a href="/haskellwiki/HaskellWiki:Community">Wiki community</a></li>
				<li id="n-recentchanges"><a href="/haskellwiki/Special:RecentChanges">Recent changes</a></li>
				<li id="n-randompage"><a href="/haskellwiki/Special:Random">Random page</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/haskellwiki/Special:WhatLinksHere/99_questions/11_to_20">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/haskellwiki/Special:RecentChangesLinked/99_questions/11_to_20">Related changes</a></li>
<li id="t-specialpages"><a href="/haskellwiki/Special:SpecialPages">Special pages</a></li>
				<li id="t-print"><a href="/haskellwiki/index.php?title=99_questions/11_to_20&amp;printable=yes" rel="alternate">Printable version</a></li>				<li id="t-permalink"><a href="/haskellwiki/index.php?title=99_questions/11_to_20&amp;oldid=45787">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="//www.mediawiki.org/"><img src="/wikistatic/skins//common/images/poweredby_mediawiki_88x31.png" height="31" width="88" alt="Powered by MediaWiki" /></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 26 May 2012, at 08:05.</li>
					<li id="viewcount">This page has been accessed 75,261 times.</li>
					<li id="copyright">Recent content is available under <a href="/haskellwiki/HaskellWiki:Copyrights" title="HaskellWiki:Copyrights">a simple permissive license</a>.</li>
					<li id="privacy"><a href="/haskellwiki/HaskellWiki:Privacy_policy" title="HaskellWiki:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/haskellwiki/HaskellWiki:About" title="HaskellWiki:About">About HaskellWiki</a></li>
					<li id="disclaimer"><a href="/haskellwiki/HaskellWiki:General_disclaimer" title="HaskellWiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.page.ready"], null, true);
}</script>
<script src="http://www.haskell.org/haskellwiki/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=hawiki&amp;*"></script>
<!-- Served in 0.100 secs. --><script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-15375175-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body></html>
