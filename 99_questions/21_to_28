<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta name="generator" content="MediaWiki 1.19.5-1+deb7u1" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/haskellwiki/opensearch_desc.php" title="HaskellWiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://www.haskell.org/haskellwiki/api.php?action=rsd" />
<link rel="copyright" href="/haskellwiki/HaskellWiki:Copyrights" />
<link rel="alternate" type="application/atom+xml" title="HaskellWiki Atom feed" href="/haskellwiki/index.php?title=Special:RecentChanges&amp;feed=atom" />		<title>99 questions/21 to 28 - HaskellWiki</title>
		<style type="text/css" media="screen, projection">/*<![CDATA[*/
			@import "/wikistatic/skins//common/shared.css?303";
			@import "/wikistatic/skins//hawiki/main.css?303";
		/*]]>*/</style>
		<link rel="stylesheet" type="text/css" media="print" href="/wikistatic/skins//common/commonPrint.css?303" />
		<!--[if lt IE 5.5000]><style type="text/css">@import "/wikistatic/skins//hawiki/IE50Fixes.css?303";</style><![endif]-->
		<!--[if IE 5.5000]><style type="text/css">@import "/wikistatic/skins//hawiki/IE55Fixes.css?303";</style><![endif]-->
		<!--[if IE 6]><style type="text/css">@import "/wikistatic/skins//hawiki/IE60Fixes.css?303";</style><![endif]-->
		<!--[if IE 7]><style type="text/css">@import "/wikistatic/skins//hawiki/IE70Fixes.css?303";</style><![endif]-->
		<!--[if lte IE 7]><script type="text/javascript" src="/wikistatic/skins//hawiki/IEFixes.js?303"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
                                                <script type="text/javascript">
                        var isMSIE55 = (window.showModalDialog && window.clipboardData && window.createPopup); /*alert("test: " + isMSIE55);*/</script>

		<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"99_questions/21_to_28","wgTitle":"99 questions/21 to 28","wgCurRevisionId":57638,"wgArticleId":2467,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Tutorials"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"99_questions/21_to_28","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script>
		<script type="text/javascript" src="/wikistatic/skins//common/wikibits.js?303"><!-- wikibits js --></script>
		<!-- Head Scripts -->
<script src="http://www.haskell.org/haskellwiki/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=hawiki&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"99_questions/21_to_28","wgTitle":"99 questions/21 to 28","wgCurRevisionId":57638,"wgArticleId":2467,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Tutorials"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"99_questions/21_to_28","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function($){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":1,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"hawiki","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;},{},{});mw.loader.implement("user.tokens",function($){mw.user.tokens.set({"editToken":"+\\","watchToken":false});;},{},{});

/* cache key: wikidb:resourceloader:filter:minify-js:7:befcdb5e3b24ff89f900613de9ed4ea3 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script><style type="text/css">/*<![CDATA[*/
.source-haskell {line-height: normal;}
.source-haskell li, .source-haskell pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for haskell
 * CSS class: source-haskell, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.haskell.source-haskell .de1, .haskell.source-haskell .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.haskell.source-haskell  {font-family:monospace;}
.haskell.source-haskell .imp {font-weight: bold; color: red;}
.haskell.source-haskell li, .haskell.source-haskell .li1 {font-weight: normal; vertical-align:top;}
.haskell.source-haskell .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.haskell.source-haskell .li2 {font-weight: bold; vertical-align:top;}
.haskell.source-haskell .kw1 {color: #06c; font-weight: bold;}
.haskell.source-haskell .kw2 {color: #06c; font-weight: bold;}
.haskell.source-haskell .kw3 {font-weight: bold;}
.haskell.source-haskell .kw4 {color: #cccc00; font-weight: bold;}
.haskell.source-haskell .kw5 {color: maroon;}
.haskell.source-haskell .co1 {color: #5d478b; font-style: italic;}
.haskell.source-haskell .co2 {color: #339933; font-weight: bold;}
.haskell.source-haskell .coMULTI {color: #5d478b; font-style: italic;}
.haskell.source-haskell .es0 {background-color: #3cb371; font-weight: bold;}
.haskell.source-haskell .br0 {color: green;}
.haskell.source-haskell .sy0 {color: #339933; font-weight: bold;}
.haskell.source-haskell .st0 {background-color: #3cb371;}
.haskell.source-haskell .nu0 {color: red;}
.haskell.source-haskell .me1 {color: #060;}
.haskell.source-haskell .ln-xtra, .haskell.source-haskell li.ln-xtra, .haskell.source-haskell div.ln-xtra {background-color: #ffc;}
.haskell.source-haskell span.xtra { display:block; }

/*]]>*/
</style>	</head>
<body class="mediawiki ltr ns-0 ns-subject page-99_questions_21_to_28 skin-hawiki">
   <div id="topbar" class="noprint">
	<div class="portlet noprint" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul><li><a class="homebutton" href="/haskellwiki/Haskell">Home</a></li>
				<li id="pt-login"><a href="/haskellwiki/index.php?title=Special:UserLogin&amp;returnto=99+questions%2F21+to+28">Log in</a></li>
			</ul>
		</div>
	</div>
        	  <div id="p-search">
	    <div id="searchBody" class="pBody">
	       <form action="/haskellwiki/index.php" id="searchform"><div>
	          <input type='hidden' name="title" value="Special:Search"/>
	          <input id="searchInput" name="search" type="text" value="" />
				<input type='submit' name="go" class="searchButton" id="searchGoButton"	value="Go" />&nbsp;
				<input type='submit' name="fulltext" class="searchButton" id="mw-searchButton" value="Search" />

	         </div></form>
	    </div>
	  </div>
   </div>
	<div id="globalWrapper">
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/wikistatic/haskellwiki_logo.png);" href="/haskellwiki/Haskell"></a>
	</div>
	<div id="column-content">
        <div id="notice-area" class="noprint">
        <!-- ?php $this->data['sitenotice'] = 'This is a test instance.  Do not edit, your changes will be lost.'; ? -->
			        </div>
        <div id="content-wrapper">
	<div id="p-cactions" class="portlet noprint">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="/haskellwiki/99_questions/21_to_28">Page</a></li>
				 <li id="ca-talk" class="new"><a href="/haskellwiki/index.php?title=Talk:99_questions/21_to_28&amp;action=edit&amp;redlink=1">Discussion</a></li>
				 <li id="ca-viewsource"><a href="/haskellwiki/index.php?title=99_questions/21_to_28&amp;action=edit">View source</a></li>
				 <li id="ca-history"><a href="/haskellwiki/index.php?title=99_questions/21_to_28&amp;action=history">History</a></li>			</ul>
		</div>
	</div>
                        <div id="content">
		<a name="top" id="top"></a>
                        <h1 id="firstHeading" class="firstHeading">99 questions/21 to 28</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From HaskellWiki</h3>
			<div id="contentSub"><span class="subpages">&lt; <a href="/haskellwiki/99_questions" title="99 questions">99 questions</a></span></div>
			<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p><br />
This is part of <a href="/haskellwiki/H-99:_Ninety-Nine_Haskell_Problems" title="H-99: Ninety-Nine Haskell Problems">Ninety-Nine Haskell Problems</a>, based on <a rel="nofollow" class="external text" href="https://prof.ti.bfh.ch/hew1/informatik3/prolog/p-99/">Ninety-Nine Prolog Problems</a> and <a rel="nofollow" class="external text" href="http://www.ic.unicamp.br/~meidanis/courses/mc336/2006s2/funcional/L-99_Ninety-Nine_Lisp_Problems.html">Ninety-Nine Lisp Problems</a>.
</p>
<h2> <span class="mw-headline" id="Problem_21">1  Problem 21 </span></h2>
<p>Insert an element at a given position into a list.
</p><p>Example:
</p>
<pre>
* (insert-at 'alfa '(a b c d) 2)
(A ALFA B C D)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">P21<span class="sy0">&gt;</span> insertAt 'X' <span class="st0">&quot;abcd&quot;</span> <span class="nu0">2</span>
<span class="st0">&quot;aXbcd&quot;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/21" title="99 questions/Solutions/21"> Solutions</a>
</p><p><br />     
</p>
<h2> <span class="mw-headline" id="Problem_22">2  Problem 22 </span></h2>
<p>Create a list containing all integers within a given range.
</p><p>Example:
</p>
<pre>
* (range 4 9)
(4 5 6 7 8 9)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">Prelude<span class="sy0">&gt;</span> range <span class="nu0">4</span> <span class="nu0">9</span>
<span class="br0">&#91;</span><span class="nu0">4</span><span class="sy0">,</span><span class="nu0">5</span><span class="sy0">,</span><span class="nu0">6</span><span class="sy0">,</span><span class="nu0">7</span><span class="sy0">,</span><span class="nu0">8</span><span class="sy0">,</span><span class="nu0">9</span><span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/22" title="99 questions/Solutions/22"> Solutions</a>
</p>
<h2> <span class="mw-headline" id="Problem_23">3  Problem 23 </span></h2>
<p>Extract a given number of randomly selected elements from a list. 
</p><p>Example:
</p>
<pre>
* (rnd-select '(a b c d e f g h) 3)
(E D A)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="kw2">Prelude</span> System<span class="sy0">.</span>Random<span class="sy0">&gt;</span>rnd<span class="sy0">_</span>select <span class="st0">&quot;abcdefgh&quot;</span> 3 <span class="sy0">&gt;&gt;=</span> <span class="kw3">putStrLn</span>
eda</pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/23" title="99 questions/Solutions/23"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_24">4  Problem 24 </span></h2>
<p>Lotto: Draw N different random numbers from the set 1..M.
</p><p>Example:
</p>
<pre>
* (rnd-select 6 49)
(23 1 17 33 21 37)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="kw2">Prelude</span> System<span class="sy0">.</span>Random<span class="sy0">&gt;</span>diff<span class="sy0">_</span>select 6 49
<span class="kw2">Prelude</span> System<span class="sy0">.</span>Random<span class="sy0">&gt;</span><span class="br0">&#91;</span><span class="nu0">23</span><span class="sy0">,</span><span class="nu0">1</span><span class="sy0">,</span><span class="nu0">17</span><span class="sy0">,</span><span class="nu0">33</span><span class="sy0">,</span><span class="nu0">21</span><span class="sy0">,</span><span class="nu0">37</span><span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/24" title="99 questions/Solutions/24"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_25">5  Problem 25 </span></h2>
<p>Generate a random permutation of the elements of a list.
</p><p>Example:
</p>
<pre>
* (rnd-permu '(a b c d e f))
(B A D C E F)
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="kw2">Prelude</span> System<span class="sy0">.</span>Random<span class="sy0">&gt;</span>rnd<span class="sy0">_</span>permu <span class="st0">&quot;abcdef&quot;</span>
<span class="kw2">Prelude</span> System<span class="sy0">.</span>Random<span class="sy0">&gt;</span><span class="st0">&quot;badcef&quot;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/25" title="99 questions/Solutions/25"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_26">6  Problem 26 </span></h2>
<p>(**) Generate the combinations of K distinct objects chosen from the N elements of a list
</p><p>In how many ways can a committee of 3 be chosen from a group of 12 people? We all know that there are C(12,3) = 220 possibilities (C(N,K) denotes the
well-known binomial coefficients). For pure mathematicians, this result may be great. But we want to really generate all the possibilities in a list.
</p><p>Example:
</p>
<pre>
* (combinations 3 '(a b c d e f))
((A B C) (A B D) (A B E) ... )
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1"><span class="sy0">&gt;</span> combinations <span class="nu0">3</span> <span class="st0">&quot;abcdef&quot;</span>
<span class="br0">&#91;</span><span class="st0">&quot;abc&quot;</span><span class="sy0">,</span><span class="st0">&quot;abd&quot;</span><span class="sy0">,</span><span class="st0">&quot;abe&quot;</span><span class="sy0">,...</span><span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/26" title="99 questions/Solutions/26"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_27">7  Problem 27 </span></h2>
<p>Group the elements of a set into disjoint subsets.
</p><p>a) In how many ways can a group of 9 people work in 3 disjoint subgroups of 2, 3 and 4 persons? Write a function that generates all the possibilities and returns them in a list.
</p><p>Example:
</p>
<pre>
* (group3 '(aldo beat carla david evi flip gary hugo ida))
( ( (ALDO BEAT) (CARLA DAVID EVI) (FLIP GARY HUGO IDA) )
... )
</pre>
<p>b) Generalize the above predicate in a way that we can specify a list of group sizes and the predicate will return a list of groups.
</p><p>Example:
</p>
<pre>
* (group '(aldo beat carla david evi flip gary hugo ida) '(2 2 5))
( ( (ALDO BEAT) (CARLA DAVID) (EVI FLIP GARY HUGO IDA) )
... )
</pre>
<p>Note that we do not want permutations of the group members; i.e. ((ALDO BEAT) ...) is the same solution as ((BEAT ALDO) ...). However, we make a difference between ((ALDO BEAT) (CARLA DAVID) ...) and ((CARLA DAVID) (ALDO BEAT) ...).
</p><p>You may find more about this combinatorial problem in a good book on discrete mathematics under the term "multinomial coefficients".
</p><p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">P27<span class="sy0">&gt;</span> group <span class="br0">&#91;</span><span class="nu0">2</span><span class="sy0">,</span><span class="nu0">3</span><span class="sy0">,</span><span class="nu0">4</span><span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="st0">&quot;aldo&quot;</span><span class="sy0">,</span><span class="st0">&quot;beat&quot;</span><span class="sy0">,</span><span class="st0">&quot;carla&quot;</span><span class="sy0">,</span><span class="st0">&quot;david&quot;</span><span class="sy0">,</span><span class="st0">&quot;evi&quot;</span><span class="sy0">,</span><span class="st0">&quot;flip&quot;</span><span class="sy0">,</span><span class="st0">&quot;gary&quot;</span><span class="sy0">,</span><span class="st0">&quot;hugo&quot;</span><span class="sy0">,</span><span class="st0">&quot;ida&quot;</span><span class="br0">&#93;</span>
<span class="br0">&#91;</span><span class="br0">&#91;</span><span class="br0">&#91;</span><span class="st0">&quot;aldo&quot;</span><span class="sy0">,</span><span class="st0">&quot;beat&quot;</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="st0">&quot;carla&quot;</span><span class="sy0">,</span><span class="st0">&quot;david&quot;</span><span class="sy0">,</span><span class="st0">&quot;evi&quot;</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="st0">&quot;flip&quot;</span><span class="sy0">,</span><span class="st0">&quot;gary&quot;</span><span class="sy0">,</span><span class="st0">&quot;hugo&quot;</span><span class="sy0">,</span><span class="st0">&quot;ida&quot;</span><span class="br0">&#93;</span><span class="br0">&#93;</span><span class="sy0">,...</span><span class="br0">&#93;</span>
<span class="br0">&#40;</span>altogether <span class="nu0">1260</span> solutions<span class="br0">&#41;</span>
&#160;
<span class="nu0">27</span><span class="sy0">&gt;</span> group <span class="br0">&#91;</span><span class="nu0">2</span><span class="sy0">,</span><span class="nu0">2</span><span class="sy0">,</span><span class="nu0">5</span><span class="br0">&#93;</span> <span class="br0">&#91;</span><span class="st0">&quot;aldo&quot;</span><span class="sy0">,</span><span class="st0">&quot;beat&quot;</span><span class="sy0">,</span><span class="st0">&quot;carla&quot;</span><span class="sy0">,</span><span class="st0">&quot;david&quot;</span><span class="sy0">,</span><span class="st0">&quot;evi&quot;</span><span class="sy0">,</span><span class="st0">&quot;flip&quot;</span><span class="sy0">,</span><span class="st0">&quot;gary&quot;</span><span class="sy0">,</span><span class="st0">&quot;hugo&quot;</span><span class="sy0">,</span><span class="st0">&quot;ida&quot;</span><span class="br0">&#93;</span>
<span class="br0">&#91;</span><span class="br0">&#91;</span><span class="br0">&#91;</span><span class="st0">&quot;aldo&quot;</span><span class="sy0">,</span><span class="st0">&quot;beat&quot;</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="st0">&quot;carla&quot;</span><span class="sy0">,</span><span class="st0">&quot;david&quot;</span><span class="br0">&#93;</span><span class="sy0">,</span><span class="br0">&#91;</span><span class="st0">&quot;evi&quot;</span><span class="sy0">,</span><span class="st0">&quot;flip&quot;</span><span class="sy0">,</span><span class="st0">&quot;gary&quot;</span><span class="sy0">,</span><span class="st0">&quot;hugo&quot;</span><span class="sy0">,</span><span class="st0">&quot;ida&quot;</span><span class="br0">&#93;</span><span class="br0">&#93;</span><span class="sy0">,...</span><span class="br0">&#93;</span>
<span class="br0">&#40;</span>altogether <span class="nu0">756</span> solutions<span class="br0">&#41;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/27" title="99 questions/Solutions/27"> Solutions</a>
</p><p><br />
</p>
<h2> <span class="mw-headline" id="Problem_28">8  Problem 28 </span></h2>
<p>Sorting a list of lists according to length of sublists
</p><p>a) We suppose that a list contains elements that are lists themselves. The objective is to sort the elements of this list according to their length. E.g. short lists first, longer lists later, or vice versa.
</p><p>Example:
</p>
<pre>
* (lsort '((a b c) (d e) (f g h) (d e) (i j k l) (m n) (o)))
((O) (D E) (D E) (M N) (A B C) (F G H) (I J K L))
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">Prelude<span class="sy0">&gt;</span>lsort <span class="br0">&#91;</span><span class="st0">&quot;abc&quot;</span><span class="sy0">,</span><span class="st0">&quot;de&quot;</span><span class="sy0">,</span><span class="st0">&quot;fgh&quot;</span><span class="sy0">,</span><span class="st0">&quot;de&quot;</span><span class="sy0">,</span><span class="st0">&quot;ijkl&quot;</span><span class="sy0">,</span><span class="st0">&quot;mn&quot;</span><span class="sy0">,</span><span class="st0">&quot;o&quot;</span><span class="br0">&#93;</span>
Prelude<span class="sy0">&gt;</span><span class="br0">&#91;</span><span class="st0">&quot;o&quot;</span><span class="sy0">,</span><span class="st0">&quot;de&quot;</span><span class="sy0">,</span><span class="st0">&quot;de&quot;</span><span class="sy0">,</span><span class="st0">&quot;mn&quot;</span><span class="sy0">,</span><span class="st0">&quot;abc&quot;</span><span class="sy0">,</span><span class="st0">&quot;fgh&quot;</span><span class="sy0">,</span><span class="st0">&quot;ijkl&quot;</span><span class="br0">&#93;</span></pre></div></div>
<p>b) Again, we suppose that a list contains elements that are lists themselves. But this time the objective is to sort the elements of this list according to their <b>length frequency</b>; i.e., in the default, where sorting is done ascendingly, lists with rare lengths are placed first, others with a more frequent length come later.
</p><p>Example:
</p>
<pre>
* (lfsort '((a b c) (d e) (f g h) (d e) (i j k l) (m n) (o)))
((i j k l) (o) (a b c) (f g h) (d e) (d e) (m n))
</pre>
<p>Example in Haskell:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="haskell source-haskell" style="font-family:monospace;"><pre class="de1">lfsort <span class="br0">&#91;</span><span class="st0">&quot;abc&quot;</span><span class="sy0">,</span> <span class="st0">&quot;de&quot;</span><span class="sy0">,</span> <span class="st0">&quot;fgh&quot;</span><span class="sy0">,</span> <span class="st0">&quot;de&quot;</span><span class="sy0">,</span> <span class="st0">&quot;ijkl&quot;</span><span class="sy0">,</span> <span class="st0">&quot;mn&quot;</span><span class="sy0">,</span> <span class="st0">&quot;o&quot;</span><span class="br0">&#93;</span>
<span class="br0">&#91;</span><span class="st0">&quot;ijkl&quot;</span><span class="sy0">,</span><span class="st0">&quot;o&quot;</span><span class="sy0">,</span><span class="st0">&quot;abc&quot;</span><span class="sy0">,</span><span class="st0">&quot;fgh&quot;</span><span class="sy0">,</span><span class="st0">&quot;de&quot;</span><span class="sy0">,</span><span class="st0">&quot;de&quot;</span><span class="sy0">,</span><span class="st0">&quot;mn&quot;</span><span class="br0">&#93;</span></pre></div></div>
<p><a href="/haskellwiki/99_questions/Solutions/28" title="99 questions/Solutions/28"> Solutions</a>
</p>
<!-- 
NewPP limit report
Preprocessor node count: 178/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2467-0!*!0!1!*!*!* and timestamp 20141002103836 -->
</div><div class="printfooter">
Retrieved from "<a href="http://www.haskell.org/haskellwiki/index.php?title=99_questions/21_to_28&amp;oldid=57638">http://www.haskell.org/haskellwiki/index.php?title=99_questions/21_to_28&amp;oldid=57638</a>"</div>
			<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/haskellwiki/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="/haskellwiki/Category:Tutorials" title="Category:Tutorials">Tutorials</a></li></ul></div></div>			<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div></div>
		<div id="column-one">
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div class='generated-sidebar portlet' id='p-navigation'>
		<h5>Navigation</h5>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage"><a href="/haskellwiki/Haskell">Haskell</a></li>
				<li id="n-portal"><a href="/haskellwiki/HaskellWiki:Community">Wiki community</a></li>
				<li id="n-recentchanges"><a href="/haskellwiki/Special:RecentChanges">Recent changes</a></li>
				<li id="n-randompage"><a href="/haskellwiki/Special:Random">Random page</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/haskellwiki/Special:WhatLinksHere/99_questions/21_to_28">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/haskellwiki/Special:RecentChangesLinked/99_questions/21_to_28">Related changes</a></li>
<li id="t-specialpages"><a href="/haskellwiki/Special:SpecialPages">Special pages</a></li>
				<li id="t-print"><a href="/haskellwiki/index.php?title=99_questions/21_to_28&amp;printable=yes" rel="alternate">Printable version</a></li>				<li id="t-permalink"><a href="/haskellwiki/index.php?title=99_questions/21_to_28&amp;oldid=57638">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="//www.mediawiki.org/"><img src="/wikistatic/skins//common/images/poweredby_mediawiki_88x31.png" height="31" width="88" alt="Powered by MediaWiki" /></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 3 March 2014, at 20:23.</li>
					<li id="viewcount">This page has been accessed 66,219 times.</li>
					<li id="copyright">Recent content is available under <a href="/haskellwiki/HaskellWiki:Copyrights" title="HaskellWiki:Copyrights">a simple permissive license</a>.</li>
					<li id="privacy"><a href="/haskellwiki/HaskellWiki:Privacy_policy" title="HaskellWiki:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="/haskellwiki/HaskellWiki:About" title="HaskellWiki:About">About HaskellWiki</a></li>
					<li id="disclaimer"><a href="/haskellwiki/HaskellWiki:General_disclaimer" title="HaskellWiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.page.ready"], null, true);
}</script>
<script src="http://www.haskell.org/haskellwiki/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=hawiki&amp;*"></script>
<!-- Served in 0.099 secs. --><script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-15375175-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</body></html>
